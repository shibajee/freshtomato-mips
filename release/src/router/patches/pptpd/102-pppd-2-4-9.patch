--- pptpd/plugins/pptpd-logwtmp.c
+++ pptpd/plugins/pptpd-logwtmp.c
@@ -12,12 +12,9 @@
 #include <unistd.h>
 #include <utmp.h>
 #include <string.h>
-#include <linux/if.h>
-#include <linux/limits.h>
-#include <pppd/pppd.h>
+#include "pppd/pppd.h"
-#include <pppd/options.h>
 
-char pppd_version[] = PPPD_VERSION;
+char pppd_version[] = VERSION;
 
 static char pptpd_original_ip[PATH_MAX+1];
 static bool pptpd_logwtmp_strip_domain = 0;
@@ -31,7 +28,7 @@
   { NULL }
 };
 
-static const char *reduce(const char *user)
+static char *reduce(char *user)
 {
   char *sep;
   if (!pptpd_logwtmp_strip_domain) return user;
@@ -45,10 +42,8 @@
 
 static void ip_up(void *opaque, int arg)
 {
-  char ifname[IFNAMSIZ];
-  const char *user = reduce(ppp_peer_authname(NULL, 0));
-  ppp_get_ifname(ifname, sizeof(ifname));
-  if (debug_on())
+  char *user = reduce(peer_authname);
+  if (debug)
     notice("pptpd-logwtmp.so ip-up %s %s %s", ifname, user, 
 	   pptpd_original_ip);
   logwtmp(ifname, user, pptpd_original_ip);
@@ -56,18 +51,16 @@
 
 static void ip_down(void *opaque, int arg)
 {
-  char ifname[IFNAMSIZ];
-  ppp_get_ifname(ifname, sizeof(ifname));
-  if (debug_on())
+  if (debug) 
     notice("pptpd-logwtmp.so ip-down %s", ifname);
   logwtmp(ifname, "", "");
 }
 
 void plugin_init(void)
 {
-  ppp_add_options(options);
-  ppp_add_notify(NF_IP_UP, ip_up, NULL);
-  ppp_add_notify(NF_IP_DOWN, ip_down, NULL);
-  if (debug_on())
+  add_options(options);
+  add_notifier(&ip_up_notifier, ip_up, NULL);
+  add_notifier(&ip_down_notifier, ip_down, NULL);
+  if (debug) 
     notice("pptpd-logwtmp: $Version$");
 }
